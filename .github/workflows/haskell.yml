# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  build:
    "continue-on-error": "${{matrix.isHead}}"
    env:
      STACK_YAML: "stack-${{matrix.ghc}}.yaml"
    name: "Build ${{matrix.ghc}}"
    "runs-on": "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v2"
    - name: Cache ~/.stack
      uses: "actions/cache@v2"
      with:
        key: "${{runner.os}}-build-global-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-${{ hashFiles(format('{0}', env.STACK_YAML)) }}"
        path: ~/.stack
        "restore-keys": |
          ${{runner.os}}-build-global-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-
          ${{runner.os}}-build-global-stack-${{matrix.ghc}}-
    - name: "Cache **/.stack-work"
      uses: "actions/cache@v2"
      with:
        key: "${{runner.os}}-build-local-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-${{ hashFiles(format('{0}', env.STACK_YAML)) }}-${{ hashFiles('**/*.hs','**/*.lhs') }}"
        path: "**/.stack-work"
        "restore-keys": |
          ${{runner.os}}-build-local-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-${{ hashFiles(format('{0}', env.STACK_YAML)) }}-
          ${{runner.os}}-build-local-stack-${{matrix.ghc}}-${{ hashFiles('**/package.yaml','**/*.cabal') }}-
          ${{runner.os}}-build-local-stack-${{matrix.ghc}}-
    - name: Build
      run: "stack build --test --no-run-tests"
    - name: Collect test exes
      run: |
        mkdir -p "test-bins/tests"
        touch "test-bins/tests.txt"
        stack ide targets 2>&1 | grep :test: | while read i; do
          EXE=$(echo "$i" | cut -d':' -f3);
          echo "${EXE}" >> "test-bins/tests.txt"
          cp "$(stack path --dist-dir)/build/${EXE}/${EXE}" "test-bins/tests";
          echo 
        done
    - name: "Upload test-artifacts-${{ matrix.ghc }}"
      uses: "actions/upload-artifact@v2.2.3"
      with:
        name: "test-artifacts-${{ matrix.ghc }}"
        path: "test-bins/"
    strategy:
      "fail-fast": false
      matrix:
        ghc:
        - '8.8.4'
        - '8.10.7'
        - '9.0.2'
        include:
        - ghc: '9.2.1'
          isHead: true
        isHead:
        - false
  test:
    "continue-on-error": "${{matrix.isHead}}"
    env:
      STACK_YAML: "stack-${{matrix.ghc}}.yaml"
    name: "Test ${{matrix.ghc}}"
    needs:
    - build
    "runs-on": "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v2"
    - id: "test-bins"
      uses: "actions/download-artifact@v2"
      with:
        name: "test-artifacts-${{ matrix.ghc }}"
        path: "test-bins/"
    - name: Run all tests
      run: |
        ls "${{steps.test-bins.outputs.download-path}}"
        while read -r TEST_EXE; do
          echo "Testing: ${TEST_EXE}"
          TEST_BIN="${{steps.test-bins.outputs.download-path}}/tests/${TEST_EXE}"
          chmod +x "${TEST_BIN}"
          "${TEST_BIN}" +RTS -N
        done < "${{steps.test-bins.outputs.download-path}}/tests.txt"
    strategy:
      "fail-fast": false
      matrix:
        ghc:
        - '8.8.4'
        - '8.10.7'
        - '9.0.2'
        include:
        - ghc: '9.2.1'
          isHead: true
        isHead:
        - false
name: Build
'on':
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
  schedule:
  - cron: "00 13 * * *"
